-- Performance Optimization Indexes for Aurum Life
-- Corrected based on actual schema structure
-- For Supabase SQL Editor

-- Tasks table indexes
CREATE INDEX IF NOT EXISTS idx_tasks_user_created 
ON tasks(user_id, created_at DESC);

CREATE INDEX IF NOT EXISTS idx_tasks_user_completed 
ON tasks(user_id, completed, due_date);

CREATE INDEX IF NOT EXISTS idx_tasks_project_id
ON tasks(project_id) WHERE project_id IS NOT NULL;

CREATE INDEX IF NOT EXISTS idx_tasks_parent_task
ON tasks(parent_task_id) WHERE parent_task_id IS NOT NULL;

CREATE INDEX IF NOT EXISTS idx_tasks_scheduled_date
ON tasks(scheduled_date) WHERE scheduled_date IS NOT NULL;

-- Projects table indexes  
CREATE INDEX IF NOT EXISTS idx_projects_user_archived 
ON projects(user_id, archived, updated_at DESC);

CREATE INDEX IF NOT EXISTS idx_projects_area_id
ON projects(area_id) WHERE area_id IS NOT NULL;

-- Journal entries indexes
CREATE INDEX IF NOT EXISTS idx_journal_user_date 
ON journal_entries(user_id, created_at DESC);

CREATE INDEX IF NOT EXISTS idx_journal_user_sentiment
ON journal_entries(user_id, sentiment_score) WHERE sentiment_score IS NOT NULL;

-- Areas-Pillars relationship
CREATE INDEX IF NOT EXISTS idx_areas_pillar 
ON areas(pillar_id, user_id);

CREATE INDEX IF NOT EXISTS idx_areas_user_id
ON areas(user_id);

-- Daily reflections for stats
CREATE INDEX IF NOT EXISTS idx_reflections_user_date 
ON daily_reflections(user_id, reflection_date DESC);

-- AI interactions for quota tracking
CREATE INDEX IF NOT EXISTS idx_ai_interactions_user_type 
ON ai_interactions(user_id, feature_type, created_at DESC);

CREATE INDEX IF NOT EXISTS idx_ai_interactions_user_created
ON ai_interactions(user_id, created_at DESC);

-- Alignment scores for dashboard
CREATE INDEX IF NOT EXISTS idx_alignment_scores_user_date
ON alignment_scores(user_id, calculated_at DESC);

-- User stats for quick lookups
CREATE INDEX IF NOT EXISTS idx_user_stats_user_id
ON user_stats(user_id);

-- Feedback for support queries
CREATE INDEX IF NOT EXISTS idx_feedback_user_created
ON feedback(user_id, created_at DESC) WHERE user_id IS NOT NULL;

CREATE INDEX IF NOT EXISTS idx_feedback_status
ON feedback(status, created_at DESC);

-- Analytics events for performance tracking (if table exists)
-- Note: Comment out these lines if analytics_events table doesn't exist yet
CREATE INDEX IF NOT EXISTS idx_analytics_events_user_created
ON analytics_events(user_id, created_at DESC) WHERE user_id IS NOT NULL;

CREATE INDEX IF NOT EXISTS idx_analytics_events_session
ON analytics_events(session_id, created_at);

-- Additional indexes based on actual schema
-- Notifications for unread queries
CREATE INDEX IF NOT EXISTS idx_notifications_unread_priority
ON notifications(user_id, is_read, created_at DESC) WHERE is_read = FALSE;

-- Resources by parent relationship
CREATE INDEX IF NOT EXISTS idx_resources_parent_relation
ON resources(parent_type, parent_id) WHERE parent_id IS NOT NULL;

-- Update table statistics after creating indexes
ANALYZE tasks;
ANALYZE projects;
ANALYZE journal_entries;
ANALYZE areas;
ANALYZE daily_reflections;
ANALYZE ai_interactions;
ANALYZE alignment_scores;
ANALYZE user_stats;
ANALYZE feedback;
ANALYZE notifications;
ANALYZE resources;