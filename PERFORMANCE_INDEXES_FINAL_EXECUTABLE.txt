-- Performance Optimization Indexes for Aurum Life
-- Based on ACTUAL schema provided
-- For Supabase SQL Editor - FINAL EXECUTABLE VERSION

-- TASKS TABLE INDEXES
-- Most queries filter by user_id and sort by dates
CREATE INDEX IF NOT EXISTS idx_tasks_user_created 
ON public.tasks(user_id, created_at DESC);

-- For user's incomplete tasks with due dates
CREATE INDEX IF NOT EXISTS idx_tasks_user_incomplete_due 
ON public.tasks(user_id, completed, due_date) 
WHERE completed = false;

-- For project-based task queries
CREATE INDEX IF NOT EXISTS idx_tasks_project 
ON public.tasks(project_id);

-- For hierarchical task queries
CREATE INDEX IF NOT EXISTS idx_tasks_parent 
ON public.tasks(parent_task_id) 
WHERE parent_task_id IS NOT NULL;

-- For HRM priority scoring
CREATE INDEX IF NOT EXISTS idx_tasks_hrm_priority 
ON public.tasks(user_id, hrm_priority_score DESC NULLS LAST) 
WHERE hrm_priority_score IS NOT NULL;

-- PROJECTS TABLE INDEXES
-- For user's active projects
CREATE INDEX IF NOT EXISTS idx_projects_user_active 
ON public.projects(user_id, archived, updated_at DESC) 
WHERE archived = false;

-- For area-based project queries
CREATE INDEX IF NOT EXISTS idx_projects_area 
ON public.projects(area_id);

-- For HRM health score queries
CREATE INDEX IF NOT EXISTS idx_projects_hrm_health 
ON public.projects(user_id, hrm_health_score DESC NULLS LAST) 
WHERE hrm_health_score IS NOT NULL;

-- JOURNAL ENTRIES INDEXES
-- For user's journal entries in chronological order
CREATE INDEX IF NOT EXISTS idx_journal_entries_user_created 
ON public.journal_entries(user_id, created_at DESC);

-- For sentiment analysis queries
CREATE INDEX IF NOT EXISTS idx_journal_entries_sentiment 
ON public.journal_entries(user_id, sentiment_score, created_at DESC) 
WHERE sentiment_score IS NOT NULL;

-- AREAS TABLE INDEXES
-- For pillar-based area queries
CREATE INDEX IF NOT EXISTS idx_areas_pillar_user 
ON public.areas(pillar_id, user_id);

-- For user's areas
CREATE INDEX IF NOT EXISTS idx_areas_user 
ON public.areas(user_id);

-- PILLARS TABLE INDEXES
-- For user's pillars
CREATE INDEX IF NOT EXISTS idx_pillars_user 
ON public.pillars(user_id);

-- DAILY REFLECTIONS INDEXES
-- For user's reflections in date order
CREATE INDEX IF NOT EXISTS idx_daily_reflections_user_date 
ON public.daily_reflections(user_id, reflection_date DESC);

-- AI INTERACTIONS INDEXES
-- For quota tracking and usage analytics
CREATE INDEX IF NOT EXISTS idx_ai_interactions_user_created 
ON public.ai_interactions(user_id, created_at DESC);

-- For feature-specific queries
CREATE INDEX IF NOT EXISTS idx_ai_interactions_user_feature 
ON public.ai_interactions(user_id, feature_type, created_at DESC);

-- ALIGNMENT SCORES INDEXES
-- For user's alignment history
CREATE INDEX IF NOT EXISTS idx_alignment_scores_user_created 
ON public.alignment_scores(user_id, created_at DESC);

-- For task-based alignment queries
CREATE INDEX IF NOT EXISTS idx_alignment_scores_task 
ON public.alignment_scores(task_id);

-- USER STATS INDEXES
-- Primary lookup by user
CREATE INDEX IF NOT EXISTS idx_user_stats_user 
ON public.user_stats(user_id);

-- NOTIFICATIONS INDEXES
-- For user's unread notifications
CREATE INDEX IF NOT EXISTS idx_notifications_user_unread 
ON public.notifications(user_id, is_read, created_at DESC) 
WHERE is_read = false;

-- For scheduled notifications
CREATE INDEX IF NOT EXISTS idx_notifications_scheduled 
ON public.notifications(scheduled_for) 
WHERE sent_at IS NULL;

-- RESOURCES INDEXES
-- For parent-child resource relationships
CREATE INDEX IF NOT EXISTS idx_resources_parent 
ON public.resources(parent_type, parent_id) 
WHERE parent_id IS NOT NULL;

-- For user's resources
CREATE INDEX IF NOT EXISTS idx_resources_user 
ON public.resources(user_id);

-- USER BEHAVIOR EVENTS INDEXES
-- For user behavior tracking
CREATE INDEX IF NOT EXISTS idx_user_behavior_events_user_created 
ON public.user_behavior_events(user_id, created_at DESC);

-- For session-based analytics
CREATE INDEX IF NOT EXISTS idx_user_behavior_events_session 
ON public.user_behavior_events(session_id, created_at);

-- For AI feature usage tracking
CREATE INDEX IF NOT EXISTS idx_user_behavior_events_ai_feature 
ON public.user_behavior_events(user_id, ai_feature_type, created_at DESC) 
WHERE ai_feature_type IS NOT NULL;

-- USER SESSIONS INDEXES
-- For active sessions
CREATE INDEX IF NOT EXISTS idx_user_sessions_active 
ON public.user_sessions(user_id, is_active) 
WHERE is_active = true;

-- For session analytics
CREATE INDEX IF NOT EXISTS idx_user_sessions_user_created 
ON public.user_sessions(user_id, created_at DESC);

-- INSIGHTS INDEXES
-- For user's active insights
CREATE INDEX IF NOT EXISTS idx_insights_user_active 
ON public.insights(user_id, is_active, created_at DESC) 
WHERE is_active = true;

-- For entity-specific insights
CREATE INDEX IF NOT EXISTS idx_insights_entity 
ON public.insights(entity_type, entity_id) 
WHERE entity_id IS NOT NULL;

-- HRM FEEDBACK LOG INDEXES
-- For user feedback history
CREATE INDEX IF NOT EXISTS idx_hrm_feedback_user_created 
ON public.hrm_feedback_log(user_id, created_at DESC);

-- AI CONVERSATION MEMORY INDEXES
-- For recent conversations
CREATE INDEX IF NOT EXISTS idx_ai_conversation_user_date 
ON public.ai_conversation_memory(user_id, conversation_date DESC);

-- WEBHOOK LOGS INDEXES
-- For monitoring webhook processing
CREATE INDEX IF NOT EXISTS idx_webhook_logs_status 
ON public.webhook_logs(status, created_at DESC) 
WHERE status = 'pending';

-- USER PROFILES INDEXES
-- For username lookups
CREATE INDEX IF NOT EXISTS idx_user_profiles_username 
ON public.user_profiles(username) 
WHERE username IS NOT NULL;

-- Update statistics for query planner
ANALYZE public.tasks;
ANALYZE public.projects;
ANALYZE public.journal_entries;
ANALYZE public.areas;
ANALYZE public.pillars;
ANALYZE public.daily_reflections;
ANALYZE public.ai_interactions;
ANALYZE public.alignment_scores;
ANALYZE public.user_stats;
ANALYZE public.notifications;
ANALYZE public.resources;
ANALYZE public.user_behavior_events;
ANALYZE public.user_sessions;
ANALYZE public.insights;
ANALYZE public.hrm_feedback_log;
ANALYZE public.ai_conversation_memory;
ANALYZE public.webhook_logs;
ANALYZE public.user_profiles;